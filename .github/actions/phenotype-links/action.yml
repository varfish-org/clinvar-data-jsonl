name: phenotype-links
description: Create phenotype links file

inputs:
  publish-artifacts:
    default: "false"
    description: "Whether to publish artifacts to the named release"
  release-name:
    description: "The name of the release to publish artifacts to"
  token:
    description: "A Github PAT"
    required: true

runs:
  using: "composite"
  steps:
    - name: Get ClinVar version
      id: get-clinvar
      run: |
        echo "release-name=$(cat release-name.txt || echo 00-latest_weekly)" >> $GITHUB_OUTPUT
      shell: bash -l {0}

    - name: Check cache phenotype links output
      id: check-cache-phenotype-links-output
      uses: actions/cache@v3
      with:
        path: ${{ env.OUTPUT_DIR }}/phenotype-links
        key: phenotype-links-${{ env.CACHE_SEED }}-${{ steps.get-clinvar.outputs.release-name }}-${{ env.CLINVAR_THIS_VERSION }}-${{ env.MAX_RECORDS }}-output
        lookup-only: true

    - name: Create requirements.txt
      run: |
        echo clinvar-this==${{ env.CLINVAR_THIS_VERSION }} > requirements.txt
      shell: stdbuf -oL bash -l {0}

    - name: Install python and cache dependencies
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: pip

    - name: Install Python dependencies
      run: pip install -r requirements.txt
      shell: stdbuf -oL bash -l {0}

    - name: Cache the generated phenotype links
      if: |
        (steps.check-cache-phenotype-links-output.outputs.cache-hit != 'true') ||
        (inputs.publish-artifacts == 'true')
      uses: actions/cache@v3
      with:
        path: ${{ env.OUTPUT_DIR }}/phenotype-links
        key: phenotype-links-${{ env.CACHE_SEED }}-${{ steps.get-clinvar.outputs.release-name }}-${{ env.CLINVAR_THIS_VERSION }}-${{ env.MAX_RECORDS }}-output

    - name: Retrieve cached ClinVar JSONL file
      if: |
        (steps.check-cache-phenotype-links-output.outputs.cache-hit != 'true')
      uses: actions/cache@v3
      with:
        path: ${{ env.OUTPUT_DIR }}/convert-clinvar
        key: convert-clinvar-${{ env.CACHE_SEED }}-${{ steps.get-clinvar.outputs.release-name }}-${{ env.CLINVAR_THIS_VERSION }}-${{ env.MAX_RECORDS }}-output
        fail-on-cache-miss: true

    - name: Run the phenotype links generation
      if: steps.check-cache-phenotype-links-output.outputs.cache-hit != 'true'
      run: bash .github/actions/phenotype-links/run.sh
      env:
        RELEASE_NAME: "${{ steps.get-clinvar.outputs.release-name }}"
      shell: stdbuf -oL bash -l {0}

    - name: Publish artifacts
      if: inputs.publish-artifacts == 'true'
      run: |
        set -xv

        version=$(\
            grep ^dc.identifier \
              ${{ env.OUTPUT_DIR }}/phenotype-links/spec.yaml \
            | rev \
            | cut -d - -f 1 \
            | rev)

        mkdir -p /tmp/for-upload/clinvar-data-phenotype-links-$version
        cp ${{ env.OUTPUT_DIR }}/phenotype-links/*.jsonl.gz \
          /tmp/for-upload/clinvar-data-phenotype-links-$version/.
        ls -lhR /tmp/for-upload/clinvar-data-phenotype-links-$version
        tar --directory=/tmp/for-upload --create --owner=0:0 --gzip \
          --file /tmp/for-upload/clinvar-data-phenotype-links-$version.tar.gz \
          clinvar-data-phenotype-links-$version

        pushd /tmp/for-upload
        sha256sum clinvar-data-phenotype-links-$version.tar.gz \
        > clinvar-data-phenotype-links-$version.tar.gz.sha256
        popd

        gh release upload --clobber "clinvar-weekly-${{ inputs.release-name }}" \
          /tmp/for-upload/clinvar-data-phenotype-links-$version.tar.gz*
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      shell: stdbuf -oL bash -l {0}
